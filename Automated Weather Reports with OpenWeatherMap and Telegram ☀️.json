{
  "name": "Automated Weather Reports with OpenWeatherMap and Telegram ☀️",
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "minutes",
              "minutesInterval": 20
            }
          ]
        }
      },
      "id": "4a9e2697-2172-4e55-bd17-96170d5640a8",
      "name": "Schedule Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "position": [
        368,
        240
      ],
      "typeVersion": 1.2
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "6a116e5a-d066-44d3-b688-c6aaa8655b25",
              "name": "Day of week",
              "value": "={{ $json['Day of week'] }}",
              "type": "string"
            },
            {
              "id": "358e3855-3c31-478e-936c-59e4d6f380b1",
              "name": "Timezone",
              "value": "={{ $json.Timezone }}",
              "type": "string"
            },
            {
              "id": "7e2b6e5a-5919-4816-a1cf-5e86c073d7f3",
              "name": "Readable time",
              "value": "={{ $json['Readable time'] }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "8474a7c2-523f-4da8-a9e5-bfdfa6b432df",
      "name": "Set Location",
      "type": "n8n-nodes-base.set",
      "position": [
        656,
        240
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "cityName": "Kapenguria",
        "language": "en"
      },
      "id": "6c789184-4971-4407-8401-334b47165daf",
      "name": "Weather: Current",
      "type": "n8n-nodes-base.openWeatherMap",
      "position": [
        1056,
        64
      ],
      "typeVersion": 1,
      "credentials": {
        "openWeatherMapApi": {
          "id": "H9e6KcFEw978X4jR",
          "name": "OpenWeatherMap account"
        }
      }
    },
    {
      "parameters": {
        "locationSelection": "cityId",
        "language": "en"
      },
      "id": "1bab62d5-d884-46e8-94af-9484a5ba2fbf",
      "name": "Weather: 5Days",
      "type": "n8n-nodes-base.openWeatherMap",
      "position": [
        1056,
        432
      ],
      "typeVersion": 1,
      "credentials": {
        "openWeatherMapApi": {
          "id": "H9e6KcFEw978X4jR",
          "name": "OpenWeatherMap account"
        }
      }
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineByPosition",
        "options": {}
      },
      "id": "cb860b7f-2dc6-4aaf-8d7b-01d391437342",
      "name": "Merge",
      "type": "n8n-nodes-base.merge",
      "position": [
        1360,
        288
      ],
      "typeVersion": 3.2
    },
    {
      "parameters": {
        "jsCode": "/* ── Weather-to-Telegram Markdown  ────────────────────────────────────────────\n   Input:  $json  ← OpenWeatherMap /forecast (5-day / 3-hour) single object\n   Output: telegram-ready markdown string in  msg.markdown_report\n────────────────────────────────────────────────────────────────────────────── */\n\nconst data = $json;                // full API response\nconst city = data.city ?? {};\nconst cityName = city.name ?? 'Unknown';\nconst cityCountry = city.country ?? '';\nconst blocks = data.list ?? [];    // 3-hour forecasts\n\n/* ── helpers ──────────────────────────────────────────────────────────────── */\nconst esc = t => t.toString().replace(/[_*[\\]()~`>#+\\-=|{}.!]/g, '\\\\$&');\nconst fmtT = t => `${Math.round(t)}°C`;\nconst fmtDay = ts => new Date(ts * 1000)\n    .toLocaleDateString('en-US', { weekday:'short', month:'short', day:'numeric' });\nconst emoji = id => (\n    id === 800 ? '☀️' :\n    id >= 801 && id <= 804 ? '☁️' :\n    id >= 200 && id <= 232 ? '⛈️' :\n    id >= 300 && id <= 321 ? '🌦️' :\n    id >= 500 && id <= 531 ? '🌧️' :\n    id >= 600 && id <= 622 ? '❄️'  :\n    id >= 700 && id <= 781 ? '🌫️'  : '🌤️'\n);\n\n/* ── aggregate daily lows / highs (and grab a noon sample for the icon) ──── */\nconst days = {};   // key = yyyy-mm-dd\n\nfor (const b of blocks) {\n    const d = new Date(b.dt * 1000);\n    const key = d.toISOString().slice(0,10);           // YYYY-MM-DD\n    const bucket = days[key] ?? (days[key] = {\n        tsNoon : b.dt,          // will be overwritten until closest to 12:00\n        iconId : b.weather[0].id,\n        desc   : b.weather[0].description, // FIXED: use description\n        lo     : b.main.temp_min,\n        hi     : b.main.temp_max\n    });\n\n    bucket.lo = Math.min(bucket.lo, b.main.temp_min);\n    bucket.hi = Math.max(bucket.hi, b.main.temp_max);\n\n    // keep icon sample closest to noon (12:00 ±1h)\n    const hr = d.getHours();\n    if (Math.abs(hr - 12) < Math.abs(new Date(bucket.tsNoon*1000).getHours() - 12)) {\n        bucket.tsNoon = b.dt;\n        bucket.iconId = b.weather[0].id;\n        bucket.desc   = b.weather[0].description; // FIXED: use description\n    }\n}\n\n/* sort days & take first 5 */\nconst dayKeys = Object.keys(days).sort().slice(0,5);\n\n/* today’s range (index 0) */\nconst today = days[dayKeys[0]];\n\n/* ── build markdown ───────────────────────────────────────────────────────── */\nconst ln = '\\n';\nconst hr = '\\n──────────\\n';\n\nlet md  = `*${esc(cityName)}, ${esc(cityCountry)} – Weather*${hr}`;\n\nconst firstBlock = data.list && data.list[0] ? data.list[0] : null;\n\nmd += '*Now*\\n';\nif (firstBlock) {\n    md += `🌡️ Temp: \\`${fmtT(firstBlock.main.temp)}\\`  (feels like \\`${fmtT(firstBlock.main.feels_like)}\\`)${ln}`;\n    md += `📉 Low / High today: \\`${fmtT(today.lo)} – ${fmtT(today.hi)}\\`${ln}`;\n    md += `🛰️ Condition: \\`${esc(firstBlock.weather[0].description)}\\`${ln}`;\n    md += `💧 Humidity: \\`${firstBlock.main.humidity}%\\`    `;\n    md += `💨 Wind: \\`${Math.round(firstBlock.wind.speed*3.6)} km/h\\`${hr}`;\n} else {\n    md += '_No current weather data available._' + hr;\n}\n\nmd += '*5-Day Forecast*' + ln;\nfor (const k of dayKeys) {\n    const d = days[k];\n    md += `➡️ *${esc(fmtDay(d.tsNoon))}* `;\n    md += `\\`${fmtT(d.lo)} – ${fmtT(d.hi)}\\` `;\n    md += `${emoji(d.iconId)} _${esc(d.desc)}_\\n`;\n}\n\n/* ── return for Telegram node ─────────────────────────────────────────────── */\nreturn { json: { markdown_report: md }};"
      },
      "id": "43d58689-f6fa-4a88-8a3c-04cfc212b498",
      "name": "Report: Prepare",
      "type": "n8n-nodes-base.code",
      "position": [
        1648,
        240
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "content": "## Set inputs \n- lat\n- long\n- telegram_chat_id",
        "height": 340,
        "width": 220,
        "color": 5
      },
      "id": "c4f57a04-c22d-4f7b-a0aa-dd08c384d4bd",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        592,
        112
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Current Weather",
        "height": 220,
        "width": 220,
        "color": 4
      },
      "id": "8b144fce-d64a-42ec-b381-c49ff7f5fc89",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        992,
        0
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## 5-Day Weather",
        "height": 220,
        "width": 220,
        "color": 4
      },
      "id": "440fb2e0-148a-4d4c-85f3-1031f13e0554",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        992,
        368
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Report",
        "height": 220,
        "width": 220,
        "color": 3
      },
      "id": "a537e327-dfcc-455c-a821-1d5d2f4cae21",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1584,
        400
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Send",
        "height": 220,
        "width": 220,
        "color": 6
      },
      "id": "493b915f-b04b-445f-b603-6378463b6e91",
      "name": "Sticky Note4",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1920,
        192
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "chatId": "={{ $('Set Location').item.json.Timezone }}",
        "text": "weather update",
        "additionalFields": {}
      },
      "id": "7cab6251-db7f-4fb0-ad08-bf0e060cfc64",
      "name": "Send a text message",
      "type": "n8n-nodes-base.telegram",
      "position": [
        1968,
        240
      ],
      "webhookId": "5738ca6e-ad42-4f46-8938-bf37c033ec3e",
      "typeVersion": 1.2,
      "credentials": {
        "telegramApi": {
          "id": "wQ7EoWiXbrDhT9eq",
          "name": "Telegram account 3"
        }
      }
    },
    {
      "parameters": {
        "chatId": "860113689",
        "text": "={{ $json.output }}",
        "additionalFields": {}
      },
      "id": "ca91e56d-8abf-432f-b9f6-af1f4ae4b031",
      "name": "Send Summary to Telegram",
      "type": "n8n-nodes-base.telegram",
      "position": [
        1504,
        48
      ],
      "webhookId": "00abd92f-264e-401b-a032-a8e9e90962c1",
      "typeVersion": 1.2,
      "credentials": {
        "telegramApi": {
          "id": "wQ7EoWiXbrDhT9eq",
          "name": "Telegram account 3"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "Merge": {
      "main": [
        []
      ]
    },
    "Set Location": {
      "main": [
        [
          {
            "node": "Weather: Current",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Weather: 5Days": {
      "main": [
        []
      ]
    },
    "Report: Prepare": {
      "main": [
        [
          {
            "node": "Send Summary to Telegram",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Set Location",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Weather: Current": {
      "main": [
        [
          {
            "node": "Report: Prepare",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {},
  "versionId": "8d0a6bf7-9a53-4e4c-9aab-224f5e65b39f",
  "meta": {
    "templateId": "6176",
    "instanceId": "a818269dd9cbbe4fddec0f07362e6c4b44be22ec2bf77800d567aad647f52bfa"
  },
  "id": "Y2lbyVf7cOCtYRPI",
  "tags": []
}